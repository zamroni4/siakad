version: '3'

# networks:
#     laravel:
#         driver: bridge

services:
    nginx:
        image: nginx:alpine
        # container_name: "nginx"
        # restart: unless-stopped
        # tty: true
        ports:
            - "8000:8000"
        volumes:
            - ./:/var/www/app
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - php
            # - postgres
        # networks:
        #     - laravel
        deploy:
            mode: global
            replicas: 3
            restart_policy:
                condition: on-failure
            placement:
                constraints: [node.role != manager]

    postgres:
        image: postgres:14.4-alpine
        # container_name: "postgres"
        # restart: unless-stopped
        # tty: true
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=siakad_pt
            - POSTGRES_USER=root
            - POSTGRES_PASSWORD=root
        # networks:
        #     - laravel
        deploy:
            replicas: 3
            restart_policy:
                condition: on-failure
            placement:
                constraints: [node.role != manager]

    php:
        # build:  migrate : php artisan migrate, seed : artisan db:seed
        #     context: .
        #     dockerfile: Dockerfile
        # image: laravel_docker:latest
        image: zroni4/siakad:1.0
        # container_name: "php"
        # restart: unless-stopped
        # tty: true
        working_dir: /var/www/app
        volumes:
            - ./:/var/www/app
        ports:
            - "9000:9000"
        # networks:
        #     - laravel
        deploy:
            mode: global
            replicas: 3
            restart_policy:
                condition: on-failure
            placement:
                constraints: [node.role != manager]


    redis_service:
        image: redis:7.0.9
        ports:
            - "6378"
        deploy:
            replicas: 3
            restart_policy:
                condition: on-failure
            placement:
                constraints: [node.role != manager]

volumes:
  postgres_data:
# nginx_data:
# letsencrypt_data:

    # redis:
    #     image: redis:alpine
    #     container_name: "${CONTAINER_PREFIX}_redis"
    #     ports:
    #         - "${REDIS_PORT}:6379"
    #     networks:
    #         - laravel
